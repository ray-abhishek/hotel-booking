from ..models.EntityModel import EntityModel
from ..models.BookingModel import BookingModel
from ..models.OrderModel import OrderModel
from app.main import db
import jwt
import datetime
from app.main.settings import key
from ..utils.save_data import save_changes
import json
import razorpay
import hmac
import hashlib

#Function for adding to catalog data
def validate_payment(data):

    #hotel_images_json = json.dumps(data["hotel_images"])
    #features_json = json.dumps(data["features"])

    razorpay_payment_id = data["razorpay_payment_id"]
    razorpay_order_id = data["razorpay_order_id"]
    razorpay_signature = data["razorpay_signature"]   
    order_id = data["order_id"]
    #return True, {"message": "success"}

    

    order = OrderModel().query.filter(OrderModel.id == order_id).first()

    if not order:
        print(order_id," <--- order_id was not found in Order Table")
    else:
        print(order.id, " is the order ID as per Order Table")


    booking = BookingModel().query.filter(BookingModel.id == order.booking_id).first()

    if not booking:
        print(booking_id," <--- booking_id was not found in booking Table")
    else:
        print(booking.id, " is the booking ID as per booking Table")

    secret = "VGcpAjSN1901I9v8uTTIOx0i"

    msg = "{}|{}".format(order_id, razorpay_payment_id)
    
    generated_signature = hmac.new(key=secret, msg=msg, digestmod=hashlib.sha256).hexdigest()


    print(generated_signature," generated signature")
    print(razorpay_signature," is razorpay signature")
    
    if generated_signature == razorpay_signature:
        
        update_booking_status_query = 'UPDATE bookings SET status="CONFIRMED" WHERE id = %s;'%(booking.id)

        db.engine.execute(update_booking_status_query)

        update_payment_status_query = 'UPDATE orders WHERE SET payment_status="PAID" WHERE id = "%s";'%(order.id)

        db.engine.execute(update_payment_status_query)

        update_order_status_query = 'UPDATE orders WHERE SET order_status="CONFIRMED" WHERE id = "%s";'%(order.id)

        db.engine.execute(update_order_status_query)

        return True, { "order_id" : order.id, "amount_paid" : order.amount }
    else:
        return False, {}

    
    
    """params_dict = { 
    "razorpay_order_id": order_id, 
    "razorpay_payment_id": razorpay_order_id,
    "razorpay_signature": razorpay_signature
    }
    """

    #print(params_dict," is params_dict")

    #print(valid," is the valid generated by Razorpay Signature Validation")
    """
    if valid:
        return True
    else:
        return False
    """


    """
    client = razorpay.Client(auth = ("rzp_test_MqHwbPLOYmrkkI", "VGcpAjSN1901I9v8uTTIOx0i"))
    client.set_app_details({"title" : "onefinestay", "version" : "1.0"})
    valid = client.utility.verify_payment_signature(params_dict)
    """